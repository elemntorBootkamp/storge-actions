import swaggerAutogen from 'swagger-autogen';
import dotenv from 'dotenv';
import logger from './logger.js';

const outputFile = './swagger_output.json';
const routesFiles = ['./routes/website.js', './routes/backup.js'];
dotenv.config();
const port = process.env.PORT;
const doc = {
  info: {
    version: '1.0.0',
    title: 'My API',
    description: 'Documentation automatically generated by the <b>swagger-autogen</b> module.',
  },
  host: `localhost:${port}`,
  basePath: '/',
  schemes: ['http', 'https'],
  consumes: ['application/json'],
  produces: ['application/json'],
  tags: [
    {
      name: 'Website',
      description: 'Endpoints',
    },
    {
      name: 'Backup',
      description: 'Endpoints',
    },
  ],
  definitions: {
    Website: {
      managerId: '1234',
      title: 'My Website',
      description: 'This is a description of my website',
      domain: ['example.com'],
      typeOfDomain: 'com',
      cpu: 'Intel Core i7',
      memory: 16,
      status: 'Active',
      websiteLogo: 'aaa.png',
    },
    createWebsite: {
      $managerId: '1234',
      $title: 'My Website',
      $description: 'This is a description of my website',
      $domain: ['example.com'],
      $typeOfDomain: 'com',
      $cpu: 'Intel Core i7',
      $memory: 16,
      $status: 'Active',
      $websiteLogo: 'aaa.png',
    },
    getAllWebsites: {
      $manager_id: '1234',
    },
    getWebsiteById: {
      $_id: '648983899e38afa07db32c65',
      $manager_id: '1234',
    },
    startStopWebsite: {
      $_id: '648983899e38afa07db32c65',
    },
    deleteWebsite: {
      $_id: '648983899e38afa07db32c65',
    },
    Backup: {
      siteId: 1,
      description: 'fghj',
    },
    addBackup: {
      $siteId: 1,
      $description: 'fghj',
    },
  },
};
swaggerAutogen(outputFile, routesFiles, doc).then(() => {
  logger.info('run');
});

export default doc;
